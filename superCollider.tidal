let paramList = [S "sound" Nothing,
              F "mid1" (Just (-1)),
              F "mid2" (Just (-1)),
              F "mid3" (Just (-1)),
              F "mid4" (Just (-1)),
              F "mid5" (Just (-1)),
              F "mid6" (Just (-1)),
              F "mid7" (Just (-1)),
              F "mid8" (Just (-1)),
              F "mid9" (Just (-1)),
              F "mid10" (Just (-1))]


let makeOscShape paramList num = OscShape {path = "/play-" ++ (show num),
                    params = paramList,
                    timestamp = NoStamp,
                    latency = 0,
                    namedParams = False,
                    preamble = []
                   }

let shapes = (makeOscShape paramList) <$> [1, 2, 3, 4]

let mid1 = makeF (shapes!!0) "mid1"
    mid2 = makeF (shapes!!0) "mid2"
    mid3 = makeF (shapes!!0) "mid3"
    mid4 = makeF (shapes!!0) "mid4"
    mid5 = makeF (shapes!!0) "mid5"
    mid6 = makeF (shapes!!0) "mid6"
    mid7 = makeF (shapes!!0) "mid7"
    mid8 = makeF (shapes!!0) "mid8"
    mid9 = makeF (shapes!!0) "mid9"
    mid10 = makeF (shapes!!0) "mid10"

s1 <- stream "127.0.0.1" 57120 (shapes!!0)
s2 <- stream "127.0.0.1" 57120 (shapes!!1)


s1 $ pat1 |+| mid1 (slow 2 sinewave1) |+| mid2 (slow 3.4 ((+0.3) <$> (/2) <$> sinewave1))
s1 $ slow 2 p6 |+| mid1 (slow 3 sinewave1) |+| mid2 (slow 4 ((+0.3) <$> (/2) <$> sinewave1))

let pat1 = sound "{bin:1 ~ bin [bot:1 bot:4 bot:1], bd:5 lt {bd:2 ~ bd:3, bot:7 ~ bot:7 ~ bot:7}}}"


s1 $ sound "{bd cp bd cp, [bin bot:3] ~ ~ bd*3 [bd sn:3]}"

s1 $ silence

d1 $ sound "{bd bd cp, sn:5 sn:5 ~ bin}"

cps 1.5

d1 $ sound "[bd bd sn:2, lt lt ht lt, hc hc hc]"


d1 $ silence
